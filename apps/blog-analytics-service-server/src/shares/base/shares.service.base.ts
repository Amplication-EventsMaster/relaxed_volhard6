/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Shares as PrismaShares } from "@prisma/client";

export class SharesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SharesCountArgs, "select">): Promise<number> {
    return this.prisma.shares.count(args);
  }

  async sharesItems(args: Prisma.SharesFindManyArgs): Promise<PrismaShares[]> {
    return this.prisma.shares.findMany(args);
  }
  async shares(
    args: Prisma.SharesFindUniqueArgs
  ): Promise<PrismaShares | null> {
    return this.prisma.shares.findUnique(args);
  }
  async createShares(args: Prisma.SharesCreateArgs): Promise<PrismaShares> {
    return this.prisma.shares.create(args);
  }
  async updateShares(args: Prisma.SharesUpdateArgs): Promise<PrismaShares> {
    return this.prisma.shares.update(args);
  }
  async deleteShares(args: Prisma.SharesDeleteArgs): Promise<PrismaShares> {
    return this.prisma.shares.delete(args);
  }
}
