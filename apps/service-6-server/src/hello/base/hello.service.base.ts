/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Hello as PrismaHello } from "@prisma/client";

export class HelloServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HelloCountArgs, "select">): Promise<number> {
    return this.prisma.hello.count(args);
  }

  async hellos(args: Prisma.HelloFindManyArgs): Promise<PrismaHello[]> {
    return this.prisma.hello.findMany(args);
  }
  async hello(args: Prisma.HelloFindUniqueArgs): Promise<PrismaHello | null> {
    return this.prisma.hello.findUnique(args);
  }
  async createHello(args: Prisma.HelloCreateArgs): Promise<PrismaHello> {
    return this.prisma.hello.create(args);
  }
  async updateHello(args: Prisma.HelloUpdateArgs): Promise<PrismaHello> {
    return this.prisma.hello.update(args);
  }
  async deleteHello(args: Prisma.HelloDeleteArgs): Promise<PrismaHello> {
    return this.prisma.hello.delete(args);
  }
}
